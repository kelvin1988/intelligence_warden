<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spring.springboot.dao.CruiseTrackDao">

	<resultMap id="CruiseTrackEntity" type="org.spring.springboot.domain.CruiseTrackEntity">
		<result column="track_id" jdbcType="BIGINT" property="trackId" javaType="java.lang.Long"/>
		<result column="name" jdbcType="VARCHAR" property="trackName" javaType="java.lang.String"/>
		<result column="preset_position_queue" jdbcType="VARCHAR" property="presetPositionQueue" javaType="java.lang.String"/>
		<result column="dev_id" jdbcType="BIGINT" property="devId" javaType="java.lang.Long"/>
		<result column="func_no" jdbcType="INTEGER" property="funcNo" javaType="java.lang.Integer"/>
		<result column="cruise_policy" jdbcType="INTEGER" property="cruisePolicy" javaType="java.lang.Integer"/>
		<result column="update_time" jdbcType="BIGINT" property="updateTime" javaType="java.lang.Long"/>
		<result column="create_time" jdbcType="BIGINT" property="createTime" javaType="java.lang.Long"/>
	</resultMap>

	<select id="getMaxFuncNo" resultType="java.lang.Integer">
        select ifnull(max(func_no),0) as MaxFuncNo from cruise_track_tb
    </select>

	<select id="getMaxTrackId" resultType="java.lang.Long">
		select ifnull(max(track_id),0) as trackId from cruise_track_tb
	</select>

	<select id="findAllCruiseTrackByDevId" parameterType="java.lang.Long"  resultMap="CruiseTrackEntity">
	  	select * from cruise_track_tb where dev_id = #{devId,jdbcType=BIGINT}
	</select>

    <insert id="addNewCruiseTrack" parameterType="org.spring.springboot.domain.CruiseTrackEntity"  useGeneratedKeys="true" keyProperty="cruiseTrack.trackId">
		insert into cruise_track_tb(track_id,name,preset_position_queue,dev_id,func_no,cruise_policy,update_time,create_time)
  			  values (#{cruiseTrack.trackId,jdbcType=BIGINT}, #{cruiseTrack.trackName,jdbcType=CHAR}
  			    ,#{cruiseTrack.presetPositionQueue,jdbcType=VARCHAR},#{cruiseTrack.devId,jdbcType=BIGINT}
  			    ,#{cruiseTrack.funcNo,jdbcType=INTEGER},#{cruiseTrack.cruisePolicy,jdbcType=INTEGER}
  			    ,#{cruiseTrack.updateTime,jdbcType=BIGINT},#{cruiseTrack.createTime,jdbcType=BIGINT})
	</insert>

	<select id="getTotalRecordsOfCruiseTrack" resultType="java.lang.Long">
		select count(track_id) as totalCnt from cruise_track_tb
	</select>

	<select id="loadCruiseTrackParitical" resultMap="CruiseTrackEntity">
		select * from cruise_track_tb order by track_id limit #{startRowId},#{count}
	</select>
</mapper>
